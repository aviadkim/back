name: Deploy to AWS Elastic Beanstalk
on:
  push:
    branches: [ master ]
  workflow_dispatch:  # Allow manual triggering
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Create Elastic Beanstalk Application if it doesn't exist
        run: |
          # Check if application exists
          if ! aws elasticbeanstalk describe-applications --application-names financial-docs > /dev/null 2>&1; then
            echo "Creating Elastic Beanstalk application 'financial-docs'"
            aws elasticbeanstalk create-application --application-name financial-docs --description "Financial Documents Analysis Application"
          else
            echo "Application 'financial-docs' already exists"
          fi
      
      - name: Check for existing environment
        id: check-env
        run: |
          if aws elasticbeanstalk describe-environments --application-name financial-docs --environment-names financial-docs-env | grep -q "financial-docs-env"; then
            echo "Environment exists"
            echo "env_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Environment does not exist"
            echo "env_exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Generate deployment package
        run: zip -r deploy.zip . -x "*.git*" "venv/*" "__pycache__/*"
      
      - name: Create Elastic Beanstalk environment if it doesn't exist
        if: steps.check-env.outputs.env_exists == 'false'
        run: |
          echo "Creating Elastic Beanstalk environment 'financial-docs-env'"
          aws elasticbeanstalk create-environment \
            --application-name financial-docs \
            --environment-name financial-docs-env \
            --solution-stack-name "64bit Amazon Linux 2023 v4.0.1 running Docker" \
            --option-settings '[
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "FLASK_ENV", "Value": "production"},
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "PORT", "Value": "10000"},
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "USE_DYNAMODB", "Value": "true"},
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "DYNAMODB_REGION", "Value": "${{ secrets.AWS_REGION }}"},
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "DEFAULT_LANGUAGE", "Value": "he"},
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "HUGGINGFACE_API_KEY", "Value": "${{ secrets.HUGGINGFACE_API_KEY }}"},
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "SECRET_KEY", "Value": "28"},
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "JWT_SECRET", "Value": "210"},
              {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "SERVICE_NAME", "Value": "${{ secrets.SERVICE_NAME }}"}
            ]'
      
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: financial-docs
          environment_name: financial-docs-env
          version_label: financial-docs-${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy.zip
          use_existing_version_if_available: false
          wait_for_environment_recovery: 300
