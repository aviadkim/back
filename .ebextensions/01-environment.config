option_settings:
  aws:elasticbeanstalk:application:environment:
    USE_DYNAMODB: true
    DYNAMODB_REGION: eu-central-1
    PORT: 10000
    FLASK_ENV: production
    LLM_PROVIDER: huggingface
    # PYTHONPATH is not needed as WORKDIR is set in Dockerfile
  
  # Python container settings removed for Docker platform
    
  aws:autoscaling:launchconfiguration:
    InstanceType: t2.micro
    container_commands:
      01_create_env_file:
        command: |
          echo "Creating .env file from SSM parameters..."
          # Define the path for the .env file within the application directory
          ENV_FILE="/app/.env"
          # Fetch secrets and write to .env file, providing defaults if fetch fails
          SECRET_KEY=$(aws ssm get-parameter --name "SECRET_KEY" --with-decryption --region eu-central-1 --query Parameter.Value --output text || echo "default_dev_secret_key")
          JWT_SECRET=$(aws ssm get-parameter --name "JWT_SECRET" --with-decryption --region eu-central-1 --query Parameter.Value --output text || echo "default_dev_jwt_secret")
          HUGGINGFACE_API_KEY=$(aws ssm get-parameter --name "HUGGINGFACE_API_KEY" --with-decryption --region eu-central-1 --query Parameter.Value --output text || echo "")
          
          # Write fetched values to the .env file
          echo "SECRET_KEY=${SECRET_KEY}" > $ENV_FILE
          echo "JWT_SECRET=${JWT_SECRET}" >> $ENV_FILE
          # Only add Hugging Face key if it was successfully fetched (not empty)
          if [ -n "$HUGGINGFACE_API_KEY" ]; then
            echo "HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}" >> $ENV_FILE
          fi
          
          # Set appropriate permissions for the .env file
          chown webapp:webapp $ENV_FILE
          chmod 600 $ENV_FILE
          echo ".env file created successfully."
        # Run this command as root because aws cli might need root privileges initially
        leader_only: true # Only run on one instance during deployment/update
